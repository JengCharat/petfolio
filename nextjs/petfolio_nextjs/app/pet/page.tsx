"use client"; // ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ Next.js ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà
import { useEffect } from "react";

import React, { useState } from "react";

type PetType = "dog" | "cat" | "bird" | "fish" | "rabbit" | "hamster";

type Pet = {
    id: number;
    name: string;
    type: PetType;
    breed: string;
    birthdate: string;
    weight: number | null;
    gender: string;
    personality: string;
    medicalConditions: string;
    privacy: string;
    emoji: string;
};

const typeEmojis: Record<PetType, string> = {
    dog: "üêï",
    cat: "üê±",
    bird: "üê¶",
    fish: "üê†",
    rabbit: "üê∞",
    hamster: "üêπ",
};

export default function PetApp() {
    const [pets, setPets] = useState<Pet[]>([]);
    const [showModal, setShowModal] = useState(false);

    const [form, setForm] = useState({
        name: "",
        type: "" as string,
        breed: "",
        birthdate: "",
        weight: "",
        gender: "",
        personality: "",
        medicalConditions: "",
        privacy: "private",
    });

    const handleChange = (
        e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>
    ) => {
        const { name, value } = e.target;
        setForm({ ...form, [name]: value });
    };

    const addPet = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const petType = form.type as PetType;

    const newPet: Omit<Pet, "id" | "emoji"> = {
    name: form.name,
    type: form.type as PetType,
    breed: form.breed,
    birthdate: form.birthdate, 
    weight: form.weight,  // ‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô string ‡∏ï‡∏≤‡∏° schema
    gender: form.gender,
    personality: form.personality,
    medicalConditions: form.medicalConditions,
    privacy: form.privacy,
};


    try {
    // ‡πÅ‡∏õ‡∏•‡∏á weight ‡πÄ‡∏õ‡πá‡∏ô string ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á
    const payload = {
        ...newPet,
        weight: newPet.weight !== null ? String(newPet.weight) : "", 
    };

    const res = await fetch("http://localhost:3002/pets", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
    });

    if (!res.ok) throw new Error("Failed to add pet");

    const savedPet = await res.json();

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° frontend id ‡πÅ‡∏•‡∏∞ emoji
    setPets([
        ...pets,
        {
            ...savedPet,
            id: pets.length + 1,
            emoji: typeEmojis[savedPet.type as PetType] || "üêæ",
        },
    ]);

    setShowModal(false);
    setForm({
        name: "",
        type: "",
        breed: "",
        birthdate: "",
        weight: "",
        gender: "",
        personality: "",
        medicalConditions: "",
        privacy: "private",
    });
} catch (err) {
    console.error("Error adding pet:", err);
    alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
}

};


useEffect(() => {
   fetch("http://localhost:3002/pets")
  .then(res => {
    if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);
    return res.json();
  })
  .then(data => {
    const petsWithEmoji = data.map((pet: any, index: number) => ({
      ...pet,
      id: index + 1,
      emoji: typeEmojis[pet.type as PetType] || "üêæ",
    }));
    setPets(petsWithEmoji);
    
  })
  .catch(err => console.error("Error fetching pets:", err));

}, []);



    return (
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            {/* Header */}
            <div className="flex justify-between items-center mb-8">
                <h2 className="text-3xl font-bold text-gray-800">‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h2>
                <button
                    onClick={() => setShowModal(true)}
                    className="bg-purple-600 hover:bg-purple-700 text-white px-6 py-3 rounded-xl font-medium transition-colors shadow-lg"
                >
                    ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà
                </button>
            </div>

            {/* Pets Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {pets.map((pet) => (
                    <div key={pet.id} className="bg-white rounded-2xl p-6 shadow-md flex flex-col items-center">
                        <div className="text-5xl mb-2">{pet.emoji}</div>
                        <h3 className="text-xl font-bold">{pet.name}</h3>
                        <p className="text-gray-500">{pet.breed}</p>
                        <p className="text-gray-400 text-sm mt-1">‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å: {pet.weight ?? "-"} ‡∏Å‡∏Å.</p>
                        <p className="text-gray-400 text-sm">‡πÄ‡∏û‡∏®: {pet.gender || "-"}</p>
                        <p className="text-gray-400 text-sm">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {pet.privacy === "private" ? "üîí ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß" : "üåç ‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞"}</p>
                    </div>
                ))}
            </div>

            {/* Modal */}
            {showModal && (
                <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
                    <div className="bg-white rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto p-8">
                        <h3 className="text-2xl font-bold text-gray-800 mb-6">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà</h3>
                        <form className="space-y-6" onSubmit={addPet}>
                            {/* Name */}
                            <div>
                                <label className="block text-gray-700 font-medium mb-2">‡∏ä‡∏∑‡πà‡∏≠ *</label>
                                <input
                                    type="text"
                                    name="name"
                                    value={form.name}
                                    onChange={handleChange}
                                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                                    required
                                />
                            </div>

                            {/* Type */}
                            <div>
                                <label className="block text-gray-700 font-medium mb-2">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó *</label>
                                <select
                                    name="type"
                                    value={form.type}
                                    onChange={handleChange}
                                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                                    required
                                >
                                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏±‡∏ï‡∏ß‡πå</option>
                                    <option value="dog">‡∏™‡∏∏‡∏ô‡∏±‡∏Ç üêï</option>
                                    <option value="cat">‡πÅ‡∏°‡∏ß üê±</option>
                                    <option value="bird">‡∏ô‡∏Å üê¶</option>
                                    <option value="fish">‡∏õ‡∏•‡∏≤ üê†</option>
                                    <option value="rabbit">‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢ üê∞</option>
                                    <option value="hamster">‡πÅ‡∏Æ‡∏°‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå üêπ</option>
                                </select>
                            </div>

                            {/* Breed */}
                            <div>
                                <label className="block text-gray-700 font-medium mb-2">‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå</label>
                                <input
                                    type="text"
                                    name="breed"
                                    value={form.breed}
                                    onChange={handleChange}
                                    placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏¥‡∏ß‡∏≤‡∏ß‡∏≤, ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡∏µ‡∏¢"
                                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                                />
                            </div>

                            {/* Birthdate */}
                            <div>
                                <label className="block text-gray-700 font-medium mb-2">‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</label>
                                <input
                                    type="text"
                                    name="birthdate"
                                    value={form.birthdate}
                                    onChange={handleChange}
                                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                                />
                            </div>

                            {/* Weight */}
                            <div>
                                <label className="block text-gray-700 font-medium mb-2">‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (‡∏Å‡∏Å.)</label>
                                <input
                                    type="text"
                                    name="weight"
                                    value={form.weight}
                                    onChange={handleChange}
                                    step="0.1"
                                    min="0"
                                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                                />
                            </div>

                            {/* Gender */}
                            <div>
                                <label className="block text-gray-700 font-medium mb-2">‡πÄ‡∏û‡∏®</label>
                                <select
                                    name="gender"
                                    value={form.gender}
                                    onChange={handleChange}
                                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                                >
                                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®</option>
                                    <option value="male">‡∏ú‡∏π‡πâ</option>
                                    <option value="female">‡πÄ‡∏°‡∏µ‡∏¢</option>
                                </select>
                            </div>

                            {/* Personality */}
                            <div>
                                <label className="block text-gray-700 font-medium mb-2">‡∏ô‡∏¥‡∏™‡∏±‡∏¢/‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û</label>
                                <textarea
                                    name="personality"
                                    value={form.personality}
                                    onChange={handleChange}
                                    rows={3}
                                    placeholder="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ô‡∏¥‡∏™‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á..."
                                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                                ></textarea>
                            </div>

                            {/* Medical Conditions */}
                            <div>
                                <label className="block text-gray-700 font-medium mb-2">‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß/‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡πâ</label>
                                <textarea
                                    name="medicalConditions"
                                    value={form.medicalConditions}
                                    onChange={handleChange}
                                    rows={3}
                                    placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå..."
                                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                                ></textarea>
                            </div>

                            {/* Privacy */}
                            <div>
                                <label className="block text-gray-700 font-medium mb-2">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</label>
                                <div className="space-y-3">
                                    <label className="flex items-center">
                                        <input
                                            type="radio"
                                            name="privacy"
                                            value="private"
                                            checked={form.privacy === "private"}
                                            onChange={handleChange}
                                            className="text-purple-600 focus:ring-purple-500"
                                        />
                                        <span className="ml-3">üîí ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß - ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</span>
                                    </label>
                                    <label className="flex items-center">
                                        <input
                                            type="radio"
                                            name="privacy"
                                            value="public"
                                            checked={form.privacy === "public"}
                                            onChange={handleChange}
                                            className="text-purple-600 focus:ring-purple-500"
                                        />
                                        <span className="ml-3">üåç ‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞ - ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏°‡∏°‡∏π‡∏ô‡∏¥‡∏ï‡∏µ‡πâ‡πÑ‡∏î‡πâ</span>
                                    </label>
                                </div>
                            </div>

                            {/* Buttons */}
                            <div className="flex space-x-4 pt-4">
                                <button
                                    type="button"
                                    onClick={() => setShowModal(false)}
                                    className="flex-1 px-6 py-3 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors"
                                >
                                    ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                                </button>
                                <button
                                    type="submit"
                                    className="flex-1 px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white rounded-xl transition-colors"
                                >
                                    ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            )}
        </div>
    );
}

